name: 'publishdockerimage'

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'image_name'
        required: true
        default: 'my-driving-poi'
      docker_context:
        description: ''
        required: true
        default: 'api/poi/web'
      webapp_name:
        description: ''
        required: true
        default: 'openhackrvp3hz11poi'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.pkg.github.com
  # github.repository as <account>/<repo>

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # # Extract metadata (tags, labels) for Docker
    # # https://github.com/docker/metadata-action
    # - name: Extract Docker metadata
    #   id: meta
    #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ${{ github.event.inputs.docker_context}}
        push: ${{ github.event_name != 'pull_request' }}
        tags: docker.pkg.github.com/${{ github.repository }}/${{ github.event.inputs.image_name}}:${{ github.run_number }}
        labels: ${{ steps.meta.outputs.labels }}
        
        
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      
    - name: 'Deploy to WebApp'
      uses: azure/webapps-deploy@v2
      with:
        slot-name: staging
        app-name: ${{github.event.inputs.webapp_name}}
        images: docker.pkg.github.com/${{ github.repository }}/${{ github.event.inputs.image_name}}:${{ github.run_number }}
        
    # check API code 200
    - name: check API is running
      uses: fjogeleit/http-request-action@master
      with:
        url: 'https://openhackrvp3hz11poi-staging.azurewebsites.net/api/healthcheck/poi'
        method: 'GET'
        
    # swap to production slot
    - name: swap deployment slot
      run: |
        az webapp deployment slot swap -g openhackrvp3hz11rg -n openhackrvp3hz11poi --slot staging --target-slot production
        
    - name: generate release file
      run: |
        echo ${{ github.run_number }} > release.md
        
    - name: create release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ github.run_number }}
        title: 'Deployed POI version'
    
    - name: Azure logout
      run: |
        az logout
      if: ${{always()}}  
